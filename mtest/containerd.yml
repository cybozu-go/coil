#cloud-config

systemd:
  units:
    - name: containerd.service
      enable: true
      dropins:
        - name: 10-opts.conf
          contents: |
            [Unit]
            ConditionPathExists=/etc/containerd/config.toml

            [Service]
            ExecStartPre=/usr/bin/mkdir -p /run/docker/libcontainerd
            ExecStart=
            ExecStart=/usr/bin/env PATH=${TORCX_BINDIR}:${PATH} ${TORCX_BINDIR}/containerd --config /etc/containerd/config.toml
    - name: wait-containerd-socket.service
      enable: true
      contents: |
        [Unit]
        Description=Wait for containerd socket
        Wants=containerd.service
        After=containerd.service

        [Service]
        Type=oneshot
        ExecStart=/opt/bin/wait-containerd-socket
        RemainAfterExit=yes

        [Install]
        WantedBy=multi-user.target
    - name: load-coil.service
      enable: true
      contents: |
        [Unit]
        Wants=data.mount wait-containerd-socket.service
        After=data.mount wait-containerd-socket.service

        [Service]
        Type=oneshot
        ExecStartPre=/usr/bin/docker load -i /data/coil.img
        ExecStartPre=/usr/bin/docker save quay.io/cybozu/coil:dev -o /tmp/coil-exported.img
        ExecStart=/usr/bin/ctr \
          --address=/run/docker/libcontainerd/docker-containerd.sock \
          --namespace k8s.io \
          cri load \
          /tmp/coil-exported.img

        [Install]
        WantedBy=multi-user.target

storage:
  files:
    - path: /etc/containerd/config.toml
      filesystem: root
      mode: 0644
      contents: 
        inline: |
          root = "/var/lib/containerd"
          state = "/run/containerd"
          oom_score = 0
          [grpc]
            address = "/run/docker/libcontainerd/docker-containerd.sock"
            uid = 0
            gid = 0
            max_recv_message_size = 16777216
            max_send_message_size = 16777216
          [debug]
            address = ""
            uid = 0
            gid = 0
            level = ""
          [metrics]
            address = ""
            grpc_histogram = false
          [cgroup]
            path = ""
          [plugins]
            [plugins.cgroups]
              no_prometheus = false
            [plugins.cri]
              stream_server_address = "127.0.0.1"
              stream_server_port = "10010"
              enable_selinux = false
              sandbox_image = "quay.io/cybozu/pause:3.1"
              stats_collect_period = 10
              systemd_cgroup = false
              enable_tls_streaming = false
              max_container_log_line_size = 16384
              [plugins.cri.containerd]
                snapshotter = "overlayfs"
                [plugins.cri.containerd.default_runtime]
                  runtime_type = "io.containerd.runtime.v1.linux"
                  runtime_engine = ""
                  runtime_root = ""
                [plugins.cri.containerd.untrusted_workload_runtime]
                  runtime_type = ""
                  runtime_engine = ""
                  runtime_root = ""
              [plugins.cri.cni]
                bin_dir = "/opt/cni/bin"
                conf_dir = "/etc/cni/net.d"
                conf_template = ""
              [plugins.cri.registry]
                [plugins.cri.registry.mirrors]
                  [plugins.cri.registry.mirrors."docker.io"]
                    endpoint = ["https://registry-1.docker.io"]
                  [plugins.cri.registry.mirrors."quay.io"]
                    endpoint = ["https://quay.io"]
            [plugins.diff-service]
              default = ["walking"]
            [plugins.linux]
              shim = "containerd-shim"
              runtime = "runc"
              runtime_root = ""
              no_shim = false
              shim_debug = false
            [plugins.scheduler]
              pause_threshold = 0.02
              deletion_threshold = 0
              mutation_threshold = 100
              schedule_delay = "0s"
              startup_delay = "100ms"
    - path: /opt/bin/wait-containerd-socket
      filesystem: root
      mode: 0755
      contents:
        inline: |
          #!/bin/sh
          while ! test -S /run/docker/libcontainerd/docker-containerd.sock; do
              sleep 1
          done
