// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: pkg/cnirpc/cni.proto

package cnirpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ErrorCode enumerates errors for CNIError
type ErrorCode int32

const (
	ErrorCode_UNKNOWN                       ErrorCode = 0
	ErrorCode_INCOMPATIBLE_CNI_VERSION      ErrorCode = 1
	ErrorCode_UNSUPPORTED_FIELD             ErrorCode = 2
	ErrorCode_UNKNOWN_CONTAINER             ErrorCode = 3
	ErrorCode_INVALID_ENVIRONMENT_VARIABLES ErrorCode = 4
	ErrorCode_IO_FAILURE                    ErrorCode = 5
	ErrorCode_DECODING_FAILURE              ErrorCode = 6
	ErrorCode_INVALID_NETWORK_CONFIG        ErrorCode = 7
	ErrorCode_TRY_AGAIN_LATER               ErrorCode = 11
	ErrorCode_INTERNAL                      ErrorCode = 999
)

// Enum value maps for ErrorCode.
var (
	ErrorCode_name = map[int32]string{
		0:   "UNKNOWN",
		1:   "INCOMPATIBLE_CNI_VERSION",
		2:   "UNSUPPORTED_FIELD",
		3:   "UNKNOWN_CONTAINER",
		4:   "INVALID_ENVIRONMENT_VARIABLES",
		5:   "IO_FAILURE",
		6:   "DECODING_FAILURE",
		7:   "INVALID_NETWORK_CONFIG",
		11:  "TRY_AGAIN_LATER",
		999: "INTERNAL",
	}
	ErrorCode_value = map[string]int32{
		"UNKNOWN":                       0,
		"INCOMPATIBLE_CNI_VERSION":      1,
		"UNSUPPORTED_FIELD":             2,
		"UNKNOWN_CONTAINER":             3,
		"INVALID_ENVIRONMENT_VARIABLES": 4,
		"IO_FAILURE":                    5,
		"DECODING_FAILURE":              6,
		"INVALID_NETWORK_CONFIG":        7,
		"TRY_AGAIN_LATER":               11,
		"INTERNAL":                      999,
	}
)

func (x ErrorCode) Enum() *ErrorCode {
	p := new(ErrorCode)
	*p = x
	return p
}

func (x ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_cnirpc_cni_proto_enumTypes[0].Descriptor()
}

func (ErrorCode) Type() protoreflect.EnumType {
	return &file_pkg_cnirpc_cni_proto_enumTypes[0]
}

func (x ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorCode.Descriptor instead.
func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pkg_cnirpc_cni_proto_rawDescGZIP(), []int{0}
}

// CNIArgs is a mirror of cni.pkg.skel.CmdArgs struct.
// https://pkg.go.dev/github.com/containernetworking/cni@v0.8.0/pkg/skel?tab=doc#CmdArgs
type CNIArgs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerId   string                 `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	Netns         string                 `protobuf:"bytes,2,opt,name=netns,proto3" json:"netns,omitempty"`
	Ifname        string                 `protobuf:"bytes,3,opt,name=ifname,proto3" json:"ifname,omitempty"`
	Args          map[string]string      `protobuf:"bytes,4,rep,name=args,proto3" json:"args,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Key-Value pairs parsed from CNI_ARGS
	Path          string                 `protobuf:"bytes,5,opt,name=path,proto3" json:"path,omitempty"`
	StdinData     []byte                 `protobuf:"bytes,6,opt,name=stdin_data,json=stdinData,proto3" json:"stdin_data,omitempty"`
	Ips           []string               `protobuf:"bytes,7,rep,name=ips,proto3" json:"ips,omitempty"`
	Interfaces    map[string]bool        `protobuf:"bytes,8,rep,name=interfaces,proto3" json:"interfaces,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CNIArgs) Reset() {
	*x = CNIArgs{}
	mi := &file_pkg_cnirpc_cni_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CNIArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CNIArgs) ProtoMessage() {}

func (x *CNIArgs) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_cnirpc_cni_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CNIArgs.ProtoReflect.Descriptor instead.
func (*CNIArgs) Descriptor() ([]byte, []int) {
	return file_pkg_cnirpc_cni_proto_rawDescGZIP(), []int{0}
}

func (x *CNIArgs) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *CNIArgs) GetNetns() string {
	if x != nil {
		return x.Netns
	}
	return ""
}

func (x *CNIArgs) GetIfname() string {
	if x != nil {
		return x.Ifname
	}
	return ""
}

func (x *CNIArgs) GetArgs() map[string]string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *CNIArgs) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CNIArgs) GetStdinData() []byte {
	if x != nil {
		return x.StdinData
	}
	return nil
}

func (x *CNIArgs) GetIps() []string {
	if x != nil {
		return x.Ips
	}
	return nil
}

func (x *CNIArgs) GetInterfaces() map[string]bool {
	if x != nil {
		return x.Interfaces
	}
	return nil
}

// CNIError is a mirror of cin.pkg.types.Error struct.
// https://pkg.go.dev/github.com/containernetworking/cni@v0.8.0/pkg/types?tab=doc#Error
//
// This should be added to *grpc.Status by WithDetails()
// https://pkg.go.dev/google.golang.org/grpc@v1.31.0/internal/status?tab=doc#Status.WithDetails
type CNIError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          ErrorCode              `protobuf:"varint,1,opt,name=code,proto3,enum=pkg.cnirpc.ErrorCode" json:"code,omitempty"`
	Msg           string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Details       string                 `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CNIError) Reset() {
	*x = CNIError{}
	mi := &file_pkg_cnirpc_cni_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CNIError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CNIError) ProtoMessage() {}

func (x *CNIError) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_cnirpc_cni_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CNIError.ProtoReflect.Descriptor instead.
func (*CNIError) Descriptor() ([]byte, []int) {
	return file_pkg_cnirpc_cni_proto_rawDescGZIP(), []int{1}
}

func (x *CNIError) GetCode() ErrorCode {
	if x != nil {
		return x.Code
	}
	return ErrorCode_UNKNOWN
}

func (x *CNIError) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CNIError) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

// AddResponse represents the response for ADD command.
//
// `result` is a types.current.Result serialized into JSON.
// https://pkg.go.dev/github.com/containernetworking/cni@v0.8.0/pkg/types/current?tab=doc#Result
type AddResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        []byte                 `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddResponse) Reset() {
	*x = AddResponse{}
	mi := &file_pkg_cnirpc_cni_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddResponse) ProtoMessage() {}

func (x *AddResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_cnirpc_cni_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddResponse.ProtoReflect.Descriptor instead.
func (*AddResponse) Descriptor() ([]byte, []int) {
	return file_pkg_cnirpc_cni_proto_rawDescGZIP(), []int{2}
}

func (x *AddResponse) GetResult() []byte {
	if x != nil {
		return x.Result
	}
	return nil
}

var File_pkg_cnirpc_cni_proto protoreflect.FileDescriptor

const file_pkg_cnirpc_cni_proto_rawDesc = "" +
	"\n" +
	"\x14pkg/cnirpc/cni.proto\x12\n" +
	"pkg.cnirpc\x1a\x1bgoogle/protobuf/empty.proto\"\x8f\x03\n" +
	"\aCNIArgs\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\x12\x14\n" +
	"\x05netns\x18\x02 \x01(\tR\x05netns\x12\x16\n" +
	"\x06ifname\x18\x03 \x01(\tR\x06ifname\x121\n" +
	"\x04args\x18\x04 \x03(\v2\x1d.pkg.cnirpc.CNIArgs.ArgsEntryR\x04args\x12\x12\n" +
	"\x04path\x18\x05 \x01(\tR\x04path\x12\x1d\n" +
	"\n" +
	"stdin_data\x18\x06 \x01(\fR\tstdinData\x12\x10\n" +
	"\x03ips\x18\a \x03(\tR\x03ips\x12C\n" +
	"\n" +
	"interfaces\x18\b \x03(\v2#.pkg.cnirpc.CNIArgs.InterfacesEntryR\n" +
	"interfaces\x1a7\n" +
	"\tArgsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a=\n" +
	"\x0fInterfacesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\bR\x05value:\x028\x01\"a\n" +
	"\bCNIError\x12)\n" +
	"\x04code\x18\x01 \x01(\x0e2\x15.pkg.cnirpc.ErrorCodeR\x04code\x12\x10\n" +
	"\x03msg\x18\x02 \x01(\tR\x03msg\x12\x18\n" +
	"\adetails\x18\x03 \x01(\tR\adetails\"%\n" +
	"\vAddResponse\x12\x16\n" +
	"\x06result\x18\x01 \x01(\fR\x06result*\xed\x01\n" +
	"\tErrorCode\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\x1c\n" +
	"\x18INCOMPATIBLE_CNI_VERSION\x10\x01\x12\x15\n" +
	"\x11UNSUPPORTED_FIELD\x10\x02\x12\x15\n" +
	"\x11UNKNOWN_CONTAINER\x10\x03\x12!\n" +
	"\x1dINVALID_ENVIRONMENT_VARIABLES\x10\x04\x12\x0e\n" +
	"\n" +
	"IO_FAILURE\x10\x05\x12\x14\n" +
	"\x10DECODING_FAILURE\x10\x06\x12\x1a\n" +
	"\x16INVALID_NETWORK_CONFIG\x10\a\x12\x13\n" +
	"\x0fTRY_AGAIN_LATER\x10\v\x12\r\n" +
	"\bINTERNAL\x10\xe7\a2\xa4\x01\n" +
	"\x03CNI\x123\n" +
	"\x03Add\x12\x13.pkg.cnirpc.CNIArgs\x1a\x17.pkg.cnirpc.AddResponse\x122\n" +
	"\x03Del\x12\x13.pkg.cnirpc.CNIArgs\x1a\x16.google.protobuf.Empty\x124\n" +
	"\x05Check\x12\x13.pkg.cnirpc.CNIArgs\x1a\x16.google.protobuf.EmptyB)Z'github.com/cybozu-go/coil/v2/pkg/cnirpcb\x06proto3"

var (
	file_pkg_cnirpc_cni_proto_rawDescOnce sync.Once
	file_pkg_cnirpc_cni_proto_rawDescData []byte
)

func file_pkg_cnirpc_cni_proto_rawDescGZIP() []byte {
	file_pkg_cnirpc_cni_proto_rawDescOnce.Do(func() {
		file_pkg_cnirpc_cni_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_cnirpc_cni_proto_rawDesc), len(file_pkg_cnirpc_cni_proto_rawDesc)))
	})
	return file_pkg_cnirpc_cni_proto_rawDescData
}

var file_pkg_cnirpc_cni_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pkg_cnirpc_cni_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_pkg_cnirpc_cni_proto_goTypes = []any{
	(ErrorCode)(0),        // 0: pkg.cnirpc.ErrorCode
	(*CNIArgs)(nil),       // 1: pkg.cnirpc.CNIArgs
	(*CNIError)(nil),      // 2: pkg.cnirpc.CNIError
	(*AddResponse)(nil),   // 3: pkg.cnirpc.AddResponse
	nil,                   // 4: pkg.cnirpc.CNIArgs.ArgsEntry
	nil,                   // 5: pkg.cnirpc.CNIArgs.InterfacesEntry
	(*emptypb.Empty)(nil), // 6: google.protobuf.Empty
}
var file_pkg_cnirpc_cni_proto_depIdxs = []int32{
	4, // 0: pkg.cnirpc.CNIArgs.args:type_name -> pkg.cnirpc.CNIArgs.ArgsEntry
	5, // 1: pkg.cnirpc.CNIArgs.interfaces:type_name -> pkg.cnirpc.CNIArgs.InterfacesEntry
	0, // 2: pkg.cnirpc.CNIError.code:type_name -> pkg.cnirpc.ErrorCode
	1, // 3: pkg.cnirpc.CNI.Add:input_type -> pkg.cnirpc.CNIArgs
	1, // 4: pkg.cnirpc.CNI.Del:input_type -> pkg.cnirpc.CNIArgs
	1, // 5: pkg.cnirpc.CNI.Check:input_type -> pkg.cnirpc.CNIArgs
	3, // 6: pkg.cnirpc.CNI.Add:output_type -> pkg.cnirpc.AddResponse
	6, // 7: pkg.cnirpc.CNI.Del:output_type -> google.protobuf.Empty
	6, // 8: pkg.cnirpc.CNI.Check:output_type -> google.protobuf.Empty
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_pkg_cnirpc_cni_proto_init() }
func file_pkg_cnirpc_cni_proto_init() {
	if File_pkg_cnirpc_cni_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_cnirpc_cni_proto_rawDesc), len(file_pkg_cnirpc_cni_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_cnirpc_cni_proto_goTypes,
		DependencyIndexes: file_pkg_cnirpc_cni_proto_depIdxs,
		EnumInfos:         file_pkg_cnirpc_cni_proto_enumTypes,
		MessageInfos:      file_pkg_cnirpc_cni_proto_msgTypes,
	}.Build()
	File_pkg_cnirpc_cni_proto = out.File
	file_pkg_cnirpc_cni_proto_goTypes = nil
	file_pkg_cnirpc_cni_proto_depIdxs = nil
}
